/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eancode;

import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author santosh
 */
public class Docmissing extends javax.swing.JFrame {

    /**
     * Creates new form Docmissing
     */
    String currqry = "";
    String doctype = "";
    String docgrn = "";
    String docnum = "";
    Connection connekt = null;
    Statement stmt = null;
    PreparedStatement pst =null;
    ResultSet rs = null;
    DbConnection dbconn = new DbConnection(); 
    testjdsearch testdia =  new testjdsearch(this,true);
    
    public Docmissing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        doctxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        grntxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        missserialtbl = new javax.swing.JScrollPane();
        misstbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        doctypetxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Doc num:");

        jLabel2.setText("Grn. num");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        missserialtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                missserialtblMouseClicked(evt);
            }
        });

        misstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Doctype", "Docnum", "Docgrnnum", "Grnstatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        misstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                misstblMouseClicked(evt);
            }
        });
        missserialtbl.setViewportView(misstbl);

        jLabel3.setText("Doc type:");

        jLabel4.setText("Missing Numbers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(missserialtbl)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctypetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grntxt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(doctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(grntxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel3)
                    .addComponent(doctypetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(missserialtbl, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        SwingUtilities.invokeLater(new Runnable() {
      public void run() {
          searchResult();
      }

private void searchResult() {
       doctype =  doctypetxt.getText();
       docnum = doctxt.getText();
       docgrn = grntxt.getText();
       if(doctype.equals("")) 
       {doctype = stringstat(doctype);}
       if(docnum.equals(""))
       {docnum =  stringstat(docnum);}
       if(docgrn.equals("")) 
       {docgrn = stringstat(docgrn);}
        
       currqry = "select G.* from grnseriestbl G WHERE G.grnserlnum NOT IN (SELECT SUBSTRING(grnnum,6,4) FROM eancodetbl) and  doctype = '" + doctype + "' and docnum like '" + docnum + "' and grnserlnum like '" + docgrn + "'";
       
       System.out.println(currqry);
              
       searchEsixtEancode(currqry,misstbl);  
            }
    });
       
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void missserialtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_missserialtblMouseClicked
        
        
        
    }//GEN-LAST:event_missserialtblMouseClicked

    private void misstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_misstblMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
//         int colval = misstbl.getSelectedColumn();
//           
//      int rowval = misstbl.getSelectedRow();
//      
//     
//      
//      /*Start -  Disable for normal user only*/
//      
//      
//      if(colval == 4 && evt.getClickCount() == 2 )
//      {
//           testdia.jcomobostat.removeAllItems();;
//          
//            String selctdoctypval = misstbl.getValueAt(rowval, 1).toString();
//            String selctdocnumval = misstbl.getValueAt(rowval, 2).toString();
//            String selctdocstatus = misstbl.getValueAt(rowval, 3).toString();
//            //System.out.println("test"+selctdocstatus);
//            testdia.doctypset.setText(selctdoctypval);
//            testdia.docnumset.setText(selctdocnumval);
//            
//            testdia.jcomobostat.addItem(selctdocstatus);
//            if(selctdocstatus.equals("Start") || selctdocstatus.equals("Break"))
//            {
//                testdia.jcomobostat.addItem("Close");
//            }
//            else
//            {
//                 testdia.jcomobostat.addItem("Start");
//            }
//           
//          testdia.updateto = "doctypetbl";
//          testdia.setVisible(true);
//      }
//      if(colval == 4 && evt.getClickCount() == 2 )
//      {
//            testdia.jcomobostat.removeAllItems();;
//            rowval = misstbl.getSelectedRow();
//            String selctdoctypval = misstbl.getValueAt(rowval, 0).toString();
//            String selctrgrnval = misstbl.getValueAt(rowval, 2).toString();
//            String selctgrnstatus = misstbl.getValueAt(rowval, 4).toString();
//            //System.out.println("test"+selctdocstatus);
//            testdia.doctypset.setText(selctdoctypval);
//            testdia.docnumset.setText(selctrgrnval);
//
//            testdia.jcomobostat.addItem(selctgrnstatus);
//            if(selctgrnstatus.equals("Start") || selctgrnstatus.equals("Break"))
//            {
//                testdia.jcomobostat.addItem("Close");
//            }
//            else
//            {
//                 testdia.jcomobostat.addItem("Start");
//            }
// 
//        testdia.updateto = "grntbl";  
//        testdia.setVisible(true); 
//      }
         /*End -  Disable for normal user only*/
    }//GEN-LAST:event_misstblMouseClicked

    
public void searchEsixtEancode(String currsear, JTable currtbl) 
    {
        
      Component co = currtbl.getEditorComponent(); 
      if (co != null) { 
                TableCellEditor tce = currtbl.getCellEditor(); 
                tce.stopCellEditing(); 
        } 
      
      //instance table model
//DefaultTableModel tableModel = new DefaultTableModel() {
//
//   @Override
//   public boolean isCellEditable(int row, int column) {
//       //Only the third column
//       return column == 3;
//   }
//};

//currtbl.setModel(tableModel);
      
    
      rs = null; 
      
      try {
        connekt =  dbconn.conn();
        pst = connekt.prepareStatement(currsear);
        rs = pst.executeQuery();
        
        while(currtbl.getRowCount() > 0) 
        {
          ((DefaultTableModel) currtbl.getModel()).removeRow(0);
        }
        
        int columns = rs.getMetaData().getColumnCount();
        
        while(rs.next())
          {  
              Object[] row = new Object[columns];
              
              for (int i = 1; i <= columns; i++)
                    {  
               row[i - 1] = rs.getObject(i).toString().trim();
                   }
                   
              ((DefaultTableModel) currtbl.getModel()).insertRow(rs.getRow()-1,row);
      
           
        }
    
        
     }catch (ClassNotFoundException ex) {
        Logger.getLogger(SearchEanPanelNormal.class.getName()).log(Level.SEVERE, null, ex);
     }catch (SQLException ex) {
        Logger.getLogger(SearchEanPanelNormal.class.getName()).log(Level.SEVERE, null, ex);
     }catch (NullPointerException ex)
        {
      Logger.getLogger(SearchEanPanelNormal.class.getName()).log(Level.SEVERE, null, ex); 
        }
    }
    
    
    public String stringstat(String str)
    {
        String curstr="";
        if (str.equals(""))
        {
            curstr = "%";
        }
        else if (!str.equals(""))
        {
            curstr = "%" + str + "%";
        } 
       
        return curstr;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Docmissing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Docmissing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Docmissing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Docmissing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Docmissing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField doctxt;
    private javax.swing.JTextField doctypetxt;
    private javax.swing.JTextField grntxt;
    public static javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane missserialtbl;
    private javax.swing.JTable misstbl;
    // End of variables declaration//GEN-END:variables
}
